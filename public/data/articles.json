[
  {
    "title": "クリエイティブコーディングの教科書",
    "description": "ゲームエンジンや3Dソフトウェアを利用して高度な表現ができるこの時代でも、プリミティブな描画や動き、アルゴリズムから学べることは多い。それらをJavaScriptで書くクリエイティブコーディングという形で学べる手引書が本書となる。",
    "url": "https://zenn.dev/baroqueengine/books/a19140f2d9fc1a",
    "image_url": "/image/articles/0.jpg"
  },
  {
    "title": "WaveFunctionCollapseについて",
    "description": "WaveFunctionCollapse（WFC）はMaxim Gumin氏が公開している描画ライブラリで、用意したタイル画像を自動で繋ぎ合わせて新たな画像を生成する機能を持つ。",
    "url": "https://zenn.dev/baroqueengine/articles/1a40755be9b8ed",
    "image_url": "/image/articles/1.png"
  },
  {
    "title": "プロシージャル界隈で話題のMarkovJuniorについての解説",
    "description": "先日、ConvChainやWaveFunctionCollpaseの開発で有名なMaxim Gumin氏の新作ライブラリがGitHubに公開された。それはMarkovJuniorというライブラリで、色を置き換えるためのルールを定義しておくことで、プロシージャルに画像を生成するというものになる。",
    "url": "https://zenn.dev/baroqueengine/articles/29c21d1da24ebb",
    "image_url": "/image/articles/2.png"
  },
  {
    "title": "TypeScriptでGIF画像をデコードして描画する",
    "description": "先日、なんとなくGIF画像の仕組みが知りたくなって、GIFのフォーマットを調べながらTypeScriptでデコード処理を書いてみたが、自分で書いたコードでGIFアニメーションが再生すると結構感動したので、そのときの知見を共有したい。",
    "url": "https://zenn.dev/baroqueengine/articles/90e499b01ecad8",
    "image_url": "/image/articles/3.png"
  },
  {
    "title": "四分木の中で最も複雑な領域を分割し続けるアートの作り方",
    "description": "この記事では上記動画のような四分木の中で最も複雑な領域を分割し続けるアルゴリズムについて解説を行う。実装例としてTypeScript + p5.jsのコードも載せている。",
    "url": "https://zenn.dev/baroqueengine/articles/ccf3ac7a2c9332",
    "image_url": "/image/articles/4.png"
  },
  {
    "title": "【Python】 カラーハーフトーンの作り方",
    "description": "この記事では、画像をカラーモデルのCMYKに分離してハーフトーンを生成する、カラーハーフトーンの作り方について解説する。",
    "url": "https://zenn.dev/baroqueengine/articles/1fa7c9d5e906d3",
    "image_url": "/image/articles/5.png"
  },
  {
    "title": "PixiJSでリサイズと回転が可能な描画オブジェクトを作る",
    "description": "図形を編集できるソフトウェアなどでよく見かける、矩形オブジェクトをリサイズしたり回転したりできる機能が作りたくて先日コードを書いてみたが、想像以上に難しかったのでハマりポイントを含めた制作手順をここに書くことにした。",
    "url": "https://zenn.dev/baroqueengine/articles/eca89a92db535d",
    "image_url": "/image/articles/7.png"
  },
  {
    "title": "2次ベジェ曲線のバウンディングボックスを求める",
    "description": "求めるバウンディングボックスは2つあり、2次ベジェ曲線の3つの制御点（始点・制御点・終点）を囲む最小の矩形範囲と、実際に引かれるベジェ曲線を囲む最小の矩形範囲になる。",
    "url": "https://zenn.dev/baroqueengine/articles/9fd55644bf79df",
    "image_url": "/image/articles/8.png"
  },
  {
    "title": "notion",
    "description": "notion公開用の雑多記事",
    "url": "https://baroqueengine.notion.site/notion-12d35b2653f24367ab617d16cf49f04a",
    "image_url": "/image/articles/6.png"
  }
]
